buildscript {
	ext {
		springBootVersion = '1.3.6.RELEASE'
	}
	repositories {
        maven {
            url "http://cdlnexus01:8081/nexus/content/groups/public"
        }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath('io.spring.gradle:dependency-management-plugin:0.6.0.RELEASE')
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'io.spring.dependency-management'

jar {
	baseName = 'cloud.configuration.service'
	version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    maven {
        url "http://cdlnexus01:8081/nexus/content/groups/public"
    }
}

dependencies {
	compile('org.springframework.cloud:spring-cloud-config-server:1.1.1.RELEASE')
	compile('org.springframework.boot:spring-boot-starter-actuator')
	
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
	//imports {
		//mavenBom "org.springframework.cloud:spring-cloud-config:1.1.1.RELEASE"
	//}
}


eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.9'
}

plugins.withType(JavaPlugin) {
    
    eclipse {
        classpath {
            plusConfigurations += [
                configurations.compile,
                configurations.runtime,
                configurations.testCompile,
                configurations.testRuntime
            ]
        }
    }
}

// We only want to create classpaths etc for java projects.
plugins.withType(JavaBasePlugin) {

   build.dependsOn eclipseClasspath
   eclipseClasspath.dependsOn cleanEclipseClasspath
}
